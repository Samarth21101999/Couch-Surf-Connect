{"ast":null,"code":"import fetchData from './utils/fetchData';\nconst url = 'http://localhost:5000/' + 'room';\nexport const createRoom = async (room, currentUser, dispatch) => {\n  dispatch({\n    type: 'START_LOADING'\n  });\n  const result = await fetchData({\n    url,\n    method: 'POST',\n    body: room,\n    token: currentUser.token\n  }, dispatch);\n  if (result) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'success',\n        message: 'Room Created Successfully'\n      }\n    });\n    dispatch({\n      type: 'RESET_ROOM'\n    });\n  }\n  dispatch({\n    type: 'END_LOADING'\n  });\n};","map":{"version":3,"names":["fetchData","url","createRoom","room","currentUser","dispatch","type","result","method","body","token","payload","open","severity","message"],"sources":["D:/MERN Stack Project/CouchSurfConnect/client/src/actions/room.js"],"sourcesContent":["import fetchData from './utils/fetchData';\r\n\r\nconst url='http://localhost:5000/'+'room';\r\n\r\nexport const createRoom=async(room,currentUser,dispatch)=>{\r\n    dispatch({type:'START_LOADING'});\r\n\r\n    const result=await fetchData({url,method:'POST',body:room, token:currentUser.token},dispatch);\r\n\r\n    if(result){\r\n        dispatch({type:'UPDATE_ALERT',payload:{open:true,severity:'success',message:'Room Created Successfully'}});\r\n        dispatch({type:'RESET_ROOM'});    \r\n    }\r\n\r\n    dispatch({type:'END_LOADING'});\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,mBAAmB;AAEzC,MAAMC,GAAG,GAAC,wBAAwB,GAAC,MAAM;AAEzC,OAAO,MAAMC,UAAU,GAAC,MAAAA,CAAMC,IAAI,EAACC,WAAW,EAACC,QAAQ,KAAG;EACtDA,QAAQ,CAAC;IAACC,IAAI,EAAC;EAAe,CAAC,CAAC;EAEhC,MAAMC,MAAM,GAAC,MAAMP,SAAS,CAAC;IAACC,GAAG;IAACO,MAAM,EAAC,MAAM;IAACC,IAAI,EAACN,IAAI;IAAEO,KAAK,EAACN,WAAW,CAACM;EAAK,CAAC,EAACL,QAAQ,CAAC;EAE7F,IAAGE,MAAM,EAAC;IACNF,QAAQ,CAAC;MAACC,IAAI,EAAC,cAAc;MAACK,OAAO,EAAC;QAACC,IAAI,EAAC,IAAI;QAACC,QAAQ,EAAC,SAAS;QAACC,OAAO,EAAC;MAA2B;IAAC,CAAC,CAAC;IAC1GT,QAAQ,CAAC;MAACC,IAAI,EAAC;IAAY,CAAC,CAAC;EACjC;EAEAD,QAAQ,CAAC;IAACC,IAAI,EAAC;EAAa,CAAC,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}