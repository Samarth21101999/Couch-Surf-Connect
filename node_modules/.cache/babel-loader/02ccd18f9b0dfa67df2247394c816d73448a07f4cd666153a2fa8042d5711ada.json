{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case 'OPEN_LOGIN':\n      return {\n        ...state,\n        openLogin: true\n      };\n    case 'CLOSE_LOGIN':\n      return {\n        ...state,\n        openLogin: false\n      };\n    case 'START_LOADING':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'END_LOADING':\n      return {\n        ...state,\n        loading: false\n      };\n    case 'UPDATE_USER':\n      localStorage.setItem('currentUser', JSON.stringify(action.payload));\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n    case 'UPDATE_ALERT':\n      return {\n        ...state,\n        alert: action.payload\n      };\n    case 'UPDATE_PROFILE':\n      return {\n        ...state,\n        profile: action.payload\n      };\n    case 'UPDATE_IMAGES':\n      return {\n        ...state,\n        images: [...state.images, action.payload]\n      };\n    case 'DELETE_IMAGE':\n      return {\n        ...state,\n        images: state.images.filter(image => image !== action.payload)\n      };\n    case 'UPDATE_DETAILS':\n      return {\n        ...state,\n        details: {\n          ...state.details,\n          ...action.payload\n        }\n      };\n    case 'UPDATE_LOCATION':\n      return {\n        ...state,\n        location: action.payload\n      };\n    case 'RESET_ROOM':\n      return {\n        ...state,\n        images: [],\n        details: {\n          title: '',\n          description: '',\n          price: 0\n        },\n        location: {\n          lng: 0,\n          lat: 0\n        }\n      };\n    default:\n      throw new Error(\"No matched action!\");\n  }\n};\nexport default reducer;","map":{"version":3,"names":["reducer","state","action","type","openLogin","loading","localStorage","setItem","JSON","stringify","payload","currentUser","alert","profile","images","filter","image","details","location","title","description","price","lng","lat","Error"],"sources":["D:/MERN Stack Project/CouchSurfConnect/client/src/context/reducer.js"],"sourcesContent":["const reducer = (state, action) => {\r\n    switch(action.type){\r\n        \r\n        case 'OPEN_LOGIN':\r\n            return {\r\n                ...state,\r\n                openLogin: true\r\n            }\r\n        case 'CLOSE_LOGIN':\r\n            return {\r\n                ...state,\r\n                openLogin: false\r\n            }\r\n            case 'START_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case 'END_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case 'UPDATE_USER':\r\n            localStorage.setItem('currentUser', JSON.stringify(action.payload));\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        case 'UPDATE_ALERT':\r\n            return {\r\n                ...state,\r\n                alert: action.payload\r\n            }\r\n        case 'UPDATE_PROFILE':\r\n                return {\r\n                    ...state,\r\n                    profile: action.payload\r\n                }\r\n        case 'UPDATE_IMAGES':\r\n            return {\r\n                ...state,\r\n                images: [...state.images, action.payload]\r\n            }   \r\n        case 'DELETE_IMAGE':\r\n            return {\r\n                ...state,\r\n               images: state.images.filter(image => image !== action.payload)\r\n            }         \r\n        case 'UPDATE_DETAILS':\r\n            return {\r\n                ...state,\r\n                details: {...state.details, ...action.payload}\r\n            }  \r\n        case 'UPDATE_LOCATION':\r\n            return {\r\n                ...state,\r\n                location: action.payload\r\n            }\r\n        case 'RESET_ROOM':\r\n            return{\r\n                ...state,\r\n                images:[],\r\n                details:{title:'',description:'',price:0},\r\n                location:{lng:0,lat:0},\r\n            }\r\n        default:\r\n            throw new Error(\"No matched action!\");\r\n    }\r\n}\r\nexport default reducer;"],"mappings":"AAAA,MAAMA,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAOA,MAAM,CAACC,IAAI;IAEd,KAAK,YAAY;MACb,OAAO;QACH,GAAGF,KAAK;QACRG,SAAS,EAAE;MACf,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGH,KAAK;QACRG,SAAS,EAAE;MACf,CAAC;IACD,KAAK,eAAe;MACpB,OAAO;QACH,GAAGH,KAAK;QACRI,OAAO,EAAE;MACb,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGJ,KAAK;QACRI,OAAO,EAAE;MACb,CAAC;IACL,KAAK,aAAa;MACdC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM,CAACQ,OAAO,CAAC,CAAC;MACnE,OAAO;QACH,GAAGT,KAAK;QACRU,WAAW,EAAET,MAAM,CAACQ;MACxB,CAAC;IACL,KAAK,cAAc;MACf,OAAO;QACH,GAAGT,KAAK;QACRW,KAAK,EAAEV,MAAM,CAACQ;MAClB,CAAC;IACL,KAAK,gBAAgB;MACb,OAAO;QACH,GAAGT,KAAK;QACRY,OAAO,EAAEX,MAAM,CAACQ;MACpB,CAAC;IACT,KAAK,eAAe;MAChB,OAAO;QACH,GAAGT,KAAK;QACRa,MAAM,EAAE,CAAC,GAAGb,KAAK,CAACa,MAAM,EAAEZ,MAAM,CAACQ,OAAO;MAC5C,CAAC;IACL,KAAK,cAAc;MACf,OAAO;QACH,GAAGT,KAAK;QACTa,MAAM,EAAEb,KAAK,CAACa,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAKd,MAAM,CAACQ,OAAO;MAChE,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGT,KAAK;QACRgB,OAAO,EAAE;UAAC,GAAGhB,KAAK,CAACgB,OAAO;UAAE,GAAGf,MAAM,CAACQ;QAAO;MACjD,CAAC;IACL,KAAK,iBAAiB;MAClB,OAAO;QACH,GAAGT,KAAK;QACRiB,QAAQ,EAAEhB,MAAM,CAACQ;MACrB,CAAC;IACL,KAAK,YAAY;MACb,OAAM;QACF,GAAGT,KAAK;QACRa,MAAM,EAAC,EAAE;QACTG,OAAO,EAAC;UAACE,KAAK,EAAC,EAAE;UAACC,WAAW,EAAC,EAAE;UAACC,KAAK,EAAC;QAAC,CAAC;QACzCH,QAAQ,EAAC;UAACI,GAAG,EAAC,CAAC;UAACC,GAAG,EAAC;QAAC;MACzB,CAAC;IACL;MACI,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAC7C;AACJ,CAAC;AACD,eAAexB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}