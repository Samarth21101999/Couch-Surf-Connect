{"ast":null,"code":"import uploadFile from '../firebase/uploadFile';\nimport fetchData from './utils/fetchData';\nimport { v4 as uuidv4 } from 'uuid';\nconst url = 'http://localhost:5000/' + 'user';\nexport const register = async (user, dispatch) => {\n  dispatch({\n    type: 'START_LOADING'\n  });\n  const result = await fetchData({\n    url: url + '/register',\n    body: user\n  }, dispatch);\n  if (result) {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: result\n    });\n    dispatch({\n      type: 'CLOSE_LOGIN'\n    });\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'success',\n        message: 'Registration Successful'\n      }\n    });\n  }\n  dispatch({\n    type: 'END_LOADING'\n  });\n};\nexport const login = async (user, dispatch) => {\n  dispatch({\n    type: 'START_LOADING'\n  });\n  const result = await fetchData({\n    url: url + '/login',\n    body: user\n  }, dispatch);\n  if (result) {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: result\n    });\n    dispatch({\n      type: 'CLOSE_LOGIN'\n    });\n  }\n  dispatch({\n    type: 'END_LOADING'\n  });\n};\nexport const updateProfile = async (currentUser, updateFields, dispatch) => {\n  dispatch({\n    type: 'START_LOADING'\n  });\n  const {\n    name,\n    file\n  } = updateFields;\n  let body = {\n    name\n  };\n  try {\n    if (file) {\n      var _file$name;\n      const imageName = uuidv4() + '.' + (file === null || file === void 0 ? void 0 : (_file$name = file.name) === null || _file$name === void 0 ? void 0 : _file$name.split('.').pop());\n      const photoURL = await uploadFile(file, `profile/${currentUser._id}/+${imageName}`);\n      body = {\n        ...body,\n        photoURL\n      };\n    }\n    const result = await fetchData({\n      url: url + '/updateProfile',\n      method: 'PATCH',\n      body,\n      token: currentUser.token\n    }, dispatch);\n    if (result) {\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: {\n          ...currentUser,\n          ...result\n        }\n      });\n      dispatch({\n        type: 'UPDATE_ALERT',\n        payload: {\n          open: true,\n          severity: 'success',\n          message: 'Profile Updated'\n        }\n      });\n      dispatch({\n        type: 'UPDATE_PROFILE',\n        payload: {\n          open: false,\n          file: null,\n          photoURL: result.photoURL\n        }\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'error',\n        message: error.message\n      }\n    });\n  }\n  dispatch({\n    type: 'END_LOADING'\n  });\n};","map":{"version":3,"names":["uploadFile","fetchData","v4","uuidv4","url","register","user","dispatch","type","result","body","payload","open","severity","message","login","updateProfile","currentUser","updateFields","name","file","_file$name","imageName","split","pop","photoURL","_id","method","token","error"],"sources":["D:/MERN Stack Project/CouchSurfConnect/client/src/actions/user.js"],"sourcesContent":["import uploadFile from '../firebase/uploadFile';\r\nimport fetchData from './utils/fetchData';\r\nimport {v4 as uuidv4} from 'uuid';\r\nconst url='http://localhost:5000/'+'user';\r\n\r\nexport const register=async(user,dispatch)=>{\r\n    \r\n    dispatch({type:'START_LOADING'});\r\n\r\n    const result=await fetchData({url:url+'/register',body:user},dispatch);\r\n    if(result){\r\n        dispatch({type:'UPDATE_USER',payload:result});\r\n        dispatch({type:'CLOSE_LOGIN'});\r\n        dispatch({type:'UPDATE_ALERT',payload:{open:true,severity:'success',message:'Registration Successful'}})\r\n    }\r\n\r\n    dispatch({type:'END_LOADING'});\r\n}\r\n\r\nexport const login=async(user,dispatch)=>{\r\n    \r\n    dispatch({type:'START_LOADING'});\r\n\r\n    const result=await fetchData({url:url+'/login',body:user},dispatch);\r\n\r\n    if(result){\r\n        dispatch({type:'UPDATE_USER',payload:result});\r\n        dispatch({type:'CLOSE_LOGIN'});\r\n\r\n    }\r\n\r\n    dispatch({type:'END_LOADING'});\r\n}\r\n\r\nexport const updateProfile=async(currentUser,updateFields,dispatch)=>{\r\n\r\n    dispatch({type:'START_LOADING'});\r\n\r\n    const {name, file}=updateFields;\r\n    let body={name};\r\n    try{\r\n        if(file){\r\n           const imageName=uuidv4()+'.'+file?.name?.split('.').pop();\r\n           const photoURL=await uploadFile(file,`profile/${currentUser._id}/+${imageName}`);\r\n           body={...body,photoURL};\r\n\r\n        }\r\n        \r\n        const result=await fetchData({url:url+'/updateProfile',method:'PATCH',body, token:currentUser.token},dispatch);\r\n        if(result){\r\n            dispatch({type:'UPDATE_USER',payload:{...currentUser,...result}});\r\n            dispatch({type:'UPDATE_ALERT',payload:{open:true,severity:'success',message:'Profile Updated'}});\r\n            dispatch({type:'UPDATE_PROFILE',payload:{open:false, file:null, photoURL:result.photoURL}});\r\n        }\r\n    }\r\n    catch(error){\r\n        dispatch({type:'UPDATE_ALERT',payload:{open:true,severity:'error',message:error.message}});\r\n    }\r\n    dispatch({type:'END_LOADING'});\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}