{"ast":null,"code":"const fetchData = async ({\n  url,\n  method = \"POST\",\n  token = '',\n  body = null\n}, dispatch) => {\n  const headers = token ? {\n    'Content-Type': 'application/json',\n    authorization: `Bearer ${token}`,\n    'Accept': 'application/json',\n    'Origin': '*'\n  } : {\n    'Content-Type': 'application/json'\n  };\n  body = body ? JSON.stringify(body) : {};\n  try {\n    const response = await fetch(url, {\n      method,\n      headers,\n      body\n    });\n    const data = await response.json();\n    if (!data.success) {\n      if (response.status === 401) {\n        dispatch({\n          type: 'UPDATE_USER',\n          payload: null\n        });\n      }\n      throw new Error(data.message);\n    }\n    return data;\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'error',\n        message: error.message\n      }\n    });\n    console.log(error);\n  }\n};\nexport default fetchData;","map":{"version":3,"names":["fetchData","url","method","token","body","dispatch","headers","authorization","JSON","stringify","response","fetch","data","json","success","status","type","payload","Error","message","error","open","severity","console","log"],"sources":["D:/MERN Stack Project/CouchSurfConnect/client/src/actions/utils/fetchData.js"],"sourcesContent":["const fetchData= async ({url, method=\"POST\",token='', body=null},dispatch) => {\r\n    \r\n    const headers=token?{'Content-Type':'application/json',authorization:`Bearer ${token}`,'Accept':'application/json','Origin':'*'}:{'Content-Type':'application/json'};\r\n   \r\n    body=body?JSON.stringify(body):{}\r\n   \r\n    try{\r\n\r\n        const response=await fetch(url,{method,headers,body});\r\n       \r\n        const data=await response.json();\r\n        \r\n        if(!data.success){\r\n            if(response.status===401){\r\n                dispatch({type:'UPDATE_USER',payload:null});\r\n            }\r\n            throw new Error(data.message);\r\n        } \r\n        return data;\r\n    }catch(error){\r\n        dispatch({type:'UPDATE_ALERT',payload:{open:true,severity:'error',message:error.message}});\r\n        console.log(error);\r\n    }\r\n}\r\nexport default fetchData;"],"mappings":"AAAA,MAAMA,SAAS,GAAE,MAAAA,CAAO;EAACC,GAAG;EAAEC,MAAM,GAAC,MAAM;EAACC,KAAK,GAAC,EAAE;EAAEC,IAAI,GAAC;AAAI,CAAC,EAACC,QAAQ,KAAK;EAE1E,MAAMC,OAAO,GAACH,KAAK,GAAC;IAAC,cAAc,EAAC,kBAAkB;IAACI,aAAa,EAAC,UAAUJ,KAAK,EAAE;IAAC,QAAQ,EAAC,kBAAkB;IAAC,QAAQ,EAAC;EAAG,CAAC,GAAC;IAAC,cAAc,EAAC;EAAkB,CAAC;EAEpKC,IAAI,GAACA,IAAI,GAACI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,GAAC,CAAC,CAAC;EAEjC,IAAG;IAEC,MAAMM,QAAQ,GAAC,MAAMC,KAAK,CAACV,GAAG,EAAC;MAACC,MAAM;MAACI,OAAO;MAACF;IAAI,CAAC,CAAC;IAErD,MAAMQ,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEhC,IAAG,CAACD,IAAI,CAACE,OAAO,EAAC;MACb,IAAGJ,QAAQ,CAACK,MAAM,KAAG,GAAG,EAAC;QACrBV,QAAQ,CAAC;UAACW,IAAI,EAAC,aAAa;UAACC,OAAO,EAAC;QAAI,CAAC,CAAC;MAC/C;MACA,MAAM,IAAIC,KAAK,CAACN,IAAI,CAACO,OAAO,CAAC;IACjC;IACA,OAAOP,IAAI;EACf,CAAC,QAAMQ,KAAK,EAAC;IACTf,QAAQ,CAAC;MAACW,IAAI,EAAC,cAAc;MAACC,OAAO,EAAC;QAACI,IAAI,EAAC,IAAI;QAACC,QAAQ,EAAC,OAAO;QAACH,OAAO,EAACC,KAAK,CAACD;MAAO;IAAC,CAAC,CAAC;IAC1FI,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,eAAepB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}