{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\nvar fs = require('fs');\nvar got = require('got');\nvar FormData = require('form-data');\nvar MapiResponse = require('../classes/mapi-response');\nvar MapiError = require('../classes/mapi-error');\nvar constants = require('../constants');\nvar methodsWithBodies = new Set(['PUT', 'PATCH', 'POST']);\n\n// Keys are request IDs, values are objects with\n// clientRequest and gotStream properties.\nvar requestsUnderway = {};\nfunction nodeAbort(request) {\n  var streams = requestsUnderway[request.id];\n  if (!streams) return;\n  streams.clientRequest.abort();\n  delete requestsUnderway[request.id];\n}\nfunction normalizeGotProgressEvent(progress) {\n  return xtend(progress, {\n    percent: progress.percent * 100\n  });\n}\nfunction createRequestStreams(request) {\n  var url = request.url(request.client.accessToken);\n  var gotOptions = {\n    method: request.method,\n    headers: request.headers,\n    retries: 0,\n    followRedirect: false,\n    throwHttpErrors: false\n  };\n  if (typeof request.file === 'string') {\n    if (request.sendFileAs && request.sendFileAs === 'form') {\n      const form = new FormData();\n      form.append('file', fs.createReadStream(request.file));\n      gotOptions.body = form;\n    } else {\n      gotOptions.body = fs.createReadStream(request.file);\n    }\n  } else if (request.file && request.file.pipe) {\n    if (request.sendFileAs && request.sendFileAs === 'form') {\n      const form = new FormData();\n      form.append('file', request.file);\n      gotOptions.body = form;\n    } else {\n      gotOptions.body = request.file;\n    }\n  } else if (typeof request.body === 'string') {\n    // matching service needs to send a www-form-urlencoded request\n    gotOptions.body = request.body;\n  } else if (request.body) {\n    gotOptions.body = JSON.stringify(request.body);\n  }\n  var gotStream = got.stream(url, gotOptions);\n  gotStream.setEncoding(request.encoding);\n  gotStream.on('downloadProgress', function (progress) {\n    request.emitter.emit(constants.EVENT_PROGRESS_DOWNLOAD, normalizeGotProgressEvent(progress));\n  });\n  gotStream.on('uploadProgress', function (progress) {\n    request.emitter.emit(constants.EVENT_PROGRESS_UPLOAD, normalizeGotProgressEvent(progress));\n  });\n  return new Promise(function (resolve) {\n    gotStream.on('request', function (req) {\n      var clientRequest = req;\n      var streams = {\n        clientRequest: clientRequest,\n        gotStream: gotStream\n      };\n      requestsUnderway[request.id] = streams;\n      resolve(streams);\n    });\n\n    // Got will not end the stream for methods that *can* have\n    // bodies if you don't provide a body, so we'll do it manually.\n    if (methodsWithBodies.has(request.method) && gotOptions.body === undefined) {\n      gotStream.end();\n    }\n  });\n}\nfunction nodeSend(request) {\n  return Promise.resolve().then(function () {\n    return createRequestStreams(request);\n  }).then(function (result) {\n    return sendStreams(result.gotStream, result.clientRequest);\n  });\n  function sendStreams(gotStream, clientRequest) {\n    return new Promise(function (resolve, reject) {\n      var errored = false;\n      clientRequest.on('abort', function () {\n        var mapiError = new MapiError({\n          request: request,\n          type: constants.ERROR_REQUEST_ABORTED\n        });\n        errored = true;\n        reject(mapiError);\n      });\n      var httpsResponse = void 0;\n      var statusCode = void 0;\n      gotStream.on('response', function (res) {\n        httpsResponse = res;\n        statusCode = res.statusCode;\n      });\n      var body = '';\n      gotStream.on('data', function (chunk) {\n        body += chunk;\n      });\n      gotStream.on('end', function () {\n        if (errored || !httpsResponse) return;\n        if (statusCode < 200 || statusCode >= 400) {\n          var mapiError = new MapiError({\n            request: request,\n            body: body,\n            statusCode: statusCode\n          });\n          reject(mapiError);\n          return;\n        }\n        try {\n          var response = new MapiResponse(request, {\n            body: body,\n            headers: httpsResponse.headers,\n            statusCode: httpsResponse.statusCode\n          });\n          resolve(response);\n        } catch (responseError) {\n          reject(responseError);\n        }\n      });\n      gotStream.on('error', function (error) {\n        errored = true;\n        reject(error);\n      });\n    });\n  }\n}\nmodule.exports = {\n  nodeAbort: nodeAbort,\n  nodeSend: nodeSend\n};","map":{"version":3,"names":["xtend","require","fs","got","FormData","MapiResponse","MapiError","constants","methodsWithBodies","Set","requestsUnderway","nodeAbort","request","streams","id","clientRequest","abort","normalizeGotProgressEvent","progress","percent","createRequestStreams","url","client","accessToken","gotOptions","method","headers","retries","followRedirect","throwHttpErrors","file","sendFileAs","form","append","createReadStream","body","pipe","JSON","stringify","gotStream","stream","setEncoding","encoding","on","emitter","emit","EVENT_PROGRESS_DOWNLOAD","EVENT_PROGRESS_UPLOAD","Promise","resolve","req","has","undefined","end","nodeSend","then","result","sendStreams","reject","errored","mapiError","type","ERROR_REQUEST_ABORTED","httpsResponse","statusCode","res","chunk","response","responseError","error","module","exports"],"sources":["D:/MERN Stack Project/CouchSurfConnect/client/node_modules/@mapbox/mapbox-sdk/lib/node/node-layer.js"],"sourcesContent":["'use strict';\n\nvar xtend = require('xtend');\nvar fs = require('fs');\nvar got = require('got');\nvar FormData = require('form-data');\nvar MapiResponse = require('../classes/mapi-response');\nvar MapiError = require('../classes/mapi-error');\nvar constants = require('../constants');\n\nvar methodsWithBodies = new Set(['PUT', 'PATCH', 'POST']);\n\n// Keys are request IDs, values are objects with\n// clientRequest and gotStream properties.\nvar requestsUnderway = {};\n\nfunction nodeAbort(request) {\n  var streams = requestsUnderway[request.id];\n  if (!streams) return;\n  streams.clientRequest.abort();\n  delete requestsUnderway[request.id];\n}\n\nfunction normalizeGotProgressEvent(progress) {\n  return xtend(progress, {\n    percent: progress.percent * 100\n  });\n}\n\nfunction createRequestStreams(request) {\n  var url = request.url(request.client.accessToken);\n  var gotOptions = {\n    method: request.method,\n    headers: request.headers,\n    retries: 0,\n    followRedirect: false,\n    throwHttpErrors: false\n  };\n\n  if (typeof request.file === 'string') {\n    if (request.sendFileAs && request.sendFileAs === 'form') {\n      const form = new FormData();\n      form.append('file', fs.createReadStream(request.file));\n      gotOptions.body = form;\n    } else {\n      gotOptions.body = fs.createReadStream(request.file);\n    }\n  } else if (request.file && request.file.pipe) {\n    if (request.sendFileAs && request.sendFileAs === 'form') {\n      const form = new FormData();\n      form.append('file', request.file);\n      gotOptions.body = form;\n    } else {\n      gotOptions.body = request.file;\n    }\n  } else if (typeof request.body === 'string') {\n    // matching service needs to send a www-form-urlencoded request\n    gotOptions.body = request.body;\n  } else if (request.body) {\n    gotOptions.body = JSON.stringify(request.body);\n  }\n\n  var gotStream = got.stream(url, gotOptions);\n\n  gotStream.setEncoding(request.encoding);\n\n  gotStream.on('downloadProgress', function(progress) {\n    request.emitter.emit(\n      constants.EVENT_PROGRESS_DOWNLOAD,\n      normalizeGotProgressEvent(progress)\n    );\n  });\n  gotStream.on('uploadProgress', function(progress) {\n    request.emitter.emit(\n      constants.EVENT_PROGRESS_UPLOAD,\n      normalizeGotProgressEvent(progress)\n    );\n  });\n\n  return new Promise(function(resolve) {\n    gotStream.on('request', function(req) {\n      var clientRequest = req;\n      var streams = { clientRequest: clientRequest, gotStream: gotStream };\n      requestsUnderway[request.id] = streams;\n      resolve(streams);\n    });\n\n    // Got will not end the stream for methods that *can* have\n    // bodies if you don't provide a body, so we'll do it manually.\n    if (\n      methodsWithBodies.has(request.method) &&\n      gotOptions.body === undefined\n    ) {\n      gotStream.end();\n    }\n  });\n}\n\nfunction nodeSend(request) {\n  return Promise.resolve()\n    .then(function() {\n      return createRequestStreams(request);\n    })\n    .then(function(result) {\n      return sendStreams(result.gotStream, result.clientRequest);\n    });\n\n  function sendStreams(gotStream, clientRequest) {\n    return new Promise(function(resolve, reject) {\n      var errored = false;\n      clientRequest.on('abort', function() {\n        var mapiError = new MapiError({\n          request: request,\n          type: constants.ERROR_REQUEST_ABORTED\n        });\n        errored = true;\n        reject(mapiError);\n      });\n\n      var httpsResponse = void 0;\n      var statusCode = void 0;\n      gotStream.on('response', function(res) {\n        httpsResponse = res;\n        statusCode = res.statusCode;\n      });\n\n      var body = '';\n      gotStream.on('data', function(chunk) {\n        body += chunk;\n      });\n\n      gotStream.on('end', function() {\n        if (errored || !httpsResponse) return;\n\n        if (statusCode < 200 || statusCode >= 400) {\n          var mapiError = new MapiError({\n            request: request,\n            body: body,\n            statusCode: statusCode\n          });\n          reject(mapiError);\n          return;\n        }\n\n        try {\n          var response = new MapiResponse(request, {\n            body: body,\n            headers: httpsResponse.headers,\n            statusCode: httpsResponse.statusCode\n          });\n          resolve(response);\n        } catch (responseError) {\n          reject(responseError);\n        }\n      });\n\n      gotStream.on('error', function(error) {\n        errored = true;\n        reject(error);\n      });\n    });\n  }\n}\n\nmodule.exports = {\n  nodeAbort: nodeAbort,\n  nodeSend: nodeSend\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}