{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Stack Project\\\\CouchSurfConnect\\\\client\\\\src\\\\components\\\\user\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useValue } from '../../context/ContextProvider';\nimport { useRef } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, TextField, Button } from '@mui/material';\nimport { Send } from '@mui/icons-material';\nimport PasswordField from './PasswordField';\nimport GoogleOneTapLogin from './GoogleOneTapLogin';\nimport { register, login } from '../../actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    state: {\n      openLogin\n    },\n    dispatch\n  } = useValue();\n  const [title, setTitle] = useState('Login');\n  const [isRegister, setIsRegister] = useState(false);\n  const nameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const handleClose = () => {\n    dispatch({\n      type: 'CLOSE_LOGIN'\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    if (!isRegister) {\n      return login({\n        email,\n        password\n      }, dispatch);\n    }\n    const name = nameRef.current.value;\n    const confirmPassword = confirmPasswordRef.current.value;\n    if (password !== confirmPassword) {\n      dispatch({\n        type: 'UPDATE_ALERT',\n        payload: {\n          open: true,\n          severity: 'error',\n          message: 'Password does not match'\n        }\n      });\n    }\n    register({\n      name,\n      email,\n      password\n    }, dispatch);\n    // dispatch({type:'START_LOADING'})\n    // setTimeout(()=>dispatch({type:'STOP_LOADING'}),2000);\n\n    //testing notification\n\n    // if(password!==confirmPassword){\n    //     dispatch({\n    //         type:'UPDATE_ALERT',\n    //         payload:{\n    //             open:true,\n    //             severity:'error',\n    //             message:'Password does not match'\n    //         }\n    //     })\n    //     return;\n    // }\n    // if(isRegister){\n    //     setTitle('Register')        \n    // }   \n  };\n  useEffect(() => {\n    isRegister ? setTitle('Register') : setTitle('Login');\n  }, [isRegister]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openLogin,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [title, /*#__PURE__*/_jsxDEV(IconButton, {\n        sx: {\n          position: 'absolute',\n          top: 8,\n          right: 8,\n          color: theme => theme.palette.grey[500]\n        },\n        onClick: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Please fill your information in the fields below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), isRegister && /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"normal\",\n          variant: \"standard\",\n          id: \"name\",\n          label: \"Name\",\n          type: \"text\",\n          fullWidth: true,\n          inputRef: nameRef,\n          inputProps: {\n            minLength: 2\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: !isRegister,\n          margin: \"normal\",\n          variant: \"standard\",\n          id: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          fullWidth: true,\n          inputRef: emailRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PasswordField, {\n          passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), isRegister && /*#__PURE__*/_jsxDEV(PasswordField, {\n          passwordRef: confirmPasswordRef,\n          id: \"confirmPassword\",\n          label: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          px: '19px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 68\n          }, this),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        justifyContent: 'left',\n        p: '5px 24px'\n      },\n      children: [isRegister ? 'Do you have an account? Sign in now' : \"Don't have an account? Register now\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsRegister(!isRegister),\n        children: isRegister ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        justifyContent: 'center',\n        py: '24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleOneTapLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TchqmryXf+odtQFQmlQRV1TuXgo=\", false, function () {\n  return [useValue];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useValue","useRef","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","TextField","Button","Send","PasswordField","GoogleOneTapLogin","register","login","jsxDEV","_jsxDEV","Login","_s","state","openLogin","dispatch","title","setTitle","isRegister","setIsRegister","nameRef","emailRef","passwordRef","confirmPasswordRef","handleClose","type","handleSubmit","e","preventDefault","email","current","value","password","name","confirmPassword","payload","open","severity","message","onClose","children","sx","position","top","right","color","theme","palette","grey","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","dividers","autoFocus","margin","variant","id","label","fullWidth","inputRef","inputProps","minLength","required","px","endIcon","justifyContent","p","py","_c","$RefreshReg$"],"sources":["D:/MERN Stack Project/CouchSurfConnect/client/src/components/user/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useValue} from '../../context/ContextProvider';\r\nimport { useRef } from 'react';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, TextField, Button } from '@mui/material';\r\nimport { Send } from '@mui/icons-material';\r\nimport PasswordField from './PasswordField';\r\nimport GoogleOneTapLogin from './GoogleOneTapLogin';\r\nimport { register, login } from '../../actions/user';\r\nconst Login = () => {\r\n    const {state:{openLogin},dispatch} = useValue()\r\n    const [title,setTitle]=useState('Login');\r\n    const [isRegister,setIsRegister]=useState(false);\r\n    const nameRef = useRef();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const confirmPasswordRef = useRef();\r\n\r\n    const handleClose = () => {\r\n        dispatch({\r\n            type:'CLOSE_LOGIN'\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const email=emailRef.current.value;\r\n        \r\n        const password=passwordRef.current.value;\r\n        \r\n        if(!isRegister){\r\n            return login({email,password},dispatch)\r\n        }\r\n        const name=nameRef.current.value;\r\n        const confirmPassword=confirmPasswordRef.current.value;\r\n        \r\n        if(password!==confirmPassword){\r\n            dispatch({\r\n                type:'UPDATE_ALERT',\r\n                payload:{\r\n                    open:true,\r\n                    severity:'error',\r\n                    message:'Password does not match'\r\n                }\r\n            })\r\n            \r\n        }\r\n        register({name,email,password},dispatch)\r\n        // dispatch({type:'START_LOADING'})\r\n        // setTimeout(()=>dispatch({type:'STOP_LOADING'}),2000);\r\n\r\n        //testing notification\r\n\r\n\r\n        // if(password!==confirmPassword){\r\n        //     dispatch({\r\n        //         type:'UPDATE_ALERT',\r\n        //         payload:{\r\n        //             open:true,\r\n        //             severity:'error',\r\n        //             message:'Password does not match'\r\n        //         }\r\n        //     })\r\n        //     return;\r\n        // }\r\n        // if(isRegister){\r\n        //     setTitle('Register')        \r\n        // }   \r\n    }\r\n\r\n    useEffect(()=>{\r\n        isRegister ? setTitle('Register'):setTitle('Login')\r\n    },[isRegister]);\r\n  return (\r\n    <Dialog\r\n        open={openLogin}\r\n        onClose={handleClose}>\r\n        <DialogTitle>{title}\r\n            <IconButton sx={{position:'absolute',top:8,right:8, color:(theme)=>theme.palette.grey[500]}} onClick={handleClose}/>\r\n        </DialogTitle>\r\n        <form onSubmit={handleSubmit}>\r\n            <DialogContent dividers>\r\n                <DialogContentText>\r\n                    Please fill your information in the fields below:\r\n                </DialogContentText>\r\n                {isRegister &&\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    variant=\"standard\"\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    inputRef={nameRef}\r\n                    inputProps={{minLength:2}}\r\n                    required\r\n                    />}\r\n                    <TextField\r\n                    autoFocus={!isRegister}\r\n                    margin=\"normal\"\r\n                    variant=\"standard\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    inputRef={emailRef}\r\n                    required/>\r\n                    <PasswordField {...{passwordRef}}/>\r\n                    {isRegister &&\r\n                    <PasswordField passwordRef={confirmPasswordRef} id='confirmPassword' label='Confirm Password'/>\r\n                    }\r\n            </DialogContent>\r\n            <DialogActions sx={{px:'19px'}}>\r\n                <Button type=\"submit\" variant=\"contained\" endIcon={<Send/>}>\r\n                    Submit\r\n                </Button>\r\n            </DialogActions>\r\n        </form>\r\n        <DialogActions sx={{justifyContent:'left', p:'5px 24px'}}>\r\n                {isRegister ? 'Do you have an account? Sign in now': \"Don't have an account? Register now\"}\r\n                <Button onClick={()=>setIsRegister(!isRegister)}>\r\n                    {isRegister ? 'Login': 'Register'}\r\n                </Button>\r\n        </DialogActions>\r\n        <DialogActions sx={{justifyContent:'center', py:'24px'}}>\r\n            <GoogleOneTapLogin/>\r\n        </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}